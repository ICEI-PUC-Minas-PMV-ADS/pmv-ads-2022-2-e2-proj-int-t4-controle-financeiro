@model PaginaList<ZCaixaV5.Models.Lancamento>
@using ZCaixaV5.Models

@{
    ViewData["Title"] = "Meu Caixa";
    List<CategoriaEntradaValor> listaEnt = (List<CategoriaEntradaValor>)ViewBag.Entradas;
    List<CategoriaSaidaValor> listaSai = (List<CategoriaSaidaValor>)ViewBag.Saidas;
}
}

<main>

    <header class="plataforma-header">
        <div class="logo-plataforma-area">
            <img class="logo-plataforma" src="~/imagens/logo-horizontal.png" alt="">
        </div>
        <div class="botoes-plataforma-area">

            <button type="button" class="btn-plataforma btn-adiciona-lancamento novoLancamento">
                <img class="icones" src="~/imagens/add-icon.png" alt="">
            </button>


            <button type="button" class="btn-plataforma btn-atualiza categoria">
                <img class="icones" src="~/imagens/atualiza-icon.png" alt="">
            </button>

        </div>


        <div class="meta-plataforma-area">
            <p>Status da meta:</p>
            <progress value=@ViewBag.PercMeta max="100" />
            @*<img class="meta-png" src="~/imagens/meta.png" alt="">*@
        </div>

        <div class="usuario-plataforma-area">

            <input type="checkbox" id="checkbox-menu-plataforma">
            <p>Olá, @ViewBag.Nome</p>

            <label for="checkbox-menu-plataforma">
                <a type="button" class="btn-limpo"><img class="icones" src="~/imagens/drop-down-icon.png" alt=""></a>
            </label>

            <nav class="menu-usuario-plataforma">
                <ul class="menu-usuario-plataforma-lista">
                    <li class="opcao-minha-conta">
                        <a href=""><img class="icones-menu-usuario" src="~/imagens/usuario-icon.png" alt=""> <p>Minha Conta</p></a>
                    </li>
                    <li class="opcao-sair">
                        <a asp-action="SairSistema"><img class="icones-menu-usuario" src="~/imagens/sair-icon.png" alt=""> <p>Sair</p></a>                
                    </li>
                </ul>
            </nav>
        </div>
    </header>

    <div class="Area-Central">
        <div class="Area-esquerda">
            <div class="Datas-entradas-saidas-area">
                <select class="btn-data-mes" name="mounth" id="mouth">
                    <option value="01">Jan</option>
                    <option value="02">Fev</option>
                    <option value="03">Mar</option>
                    <option value="04">Abr</option>
                    <option value="05">Mai</option>
                    <option value="06">Jun</option>
                    <option value="07">Jul</option>
                    <option value="08">Ago</option>
                    <option value="09">Set</option>
                    <option value="10">Out</option>
                    <option value="11">Nov</option>
                    <option value="12">Dez</option>
                </select>

                <select class="btn-data-mes" name="year" id="year">
                    <option value="2022">2022</option>
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                </select>
                <button class="btn-ok Ok">Ok</button>
                <button class="btn-ok Todos os Lançamentos">Todos</button>
            </div>
            <div class="area-esquerda-titulos">
                <h2>Receitas e Despesas</h2>
            </div>
            <div class="entradas-saidas-area">

                <div class="entradas-valores">
                    <p class="saldos-titulos"> Total de Receitas:</p>
                    <output name="totReceita" id="totReceita" />
                </div>
                <p class="underline-entradas-saidas"></p>
                <div class="saidas-valores">
                    <p class="saldos-titulos"> Total de Despesas:</p>
                    <output name="totDespesa" id="totDespesa" />
                </div>
                <p class="underline-entradas-saidas"></p>
                <div class="saldo-total-area">
                    <p class="saldos-titulos">Saldo Total:</p>
                    <output name="totSaldo" id="totSaldo" />
                </div>
                
                <div class="entradas-saidas-categorias-area">
                    <p class="saldos-titulos categorias-titulo"> Valores por Categorias: </p>                  
                    <div id="lista-entradas">
                        @foreach (var itemE in listaEnt)
                        {
                            <div class="entradas-valores valores-categorias">
                                <p class="saldos-titulos">@itemE.Categoria</p> <p>@itemE.ValorF</p>
                            </div>
                        }
                    </div>

                    <p class="underline-entradas-saidas"></p>                   
                    <div id="lista-saidas">
                        @foreach (var itemS in listaSai)
                        {
                            <div class="entradas-valores valores-categorias">
                                <p class="saldos-titulos">@itemS.Categoria</p> <p>@itemS.ValorF</p>
                            </div>
                        }
                    </div>
                </div> 
            </div>
            <div class="botoes-esquerda-areas">
                <button class="btn-plataforma btn-area-esquerda btn-atualiza">Relatorios</button>
                <input type="checkbox" id="checkbox-menu-meta">
                
                <label class="botao-meta btn-plataforma btn-area-esquerda btn-atualiza botao-meta novameta" @*for="checkbox-menu-meta"*@>
                    <a class="">Meta</a>
                </label>
                <div class="menu-meta">
                    <div class="modal fade" id=modalMeta tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content modal-lancamento">
                                <div class="modal-header">
                                    <h1 class="modal-title" id="staticBackdropLabel"></h1>
                                </div>                    
                                <div class="modal-body">
                                    <div class="formulario-lancamento">                                                                           
                                        <div class="campos-insere-lan-row">
                                            <div class="valor-area">
                                                <p>Inserir Meta</p>
                                                <input type="text" class="formulario-lancamento-input campo-valor form-control form-control-sm ValorMetaF" onInput="mascaraMoeda(event);" />                  
                                            </div>                                            
                                        </div>
                                        <div class="modal-footer">
                                            <input type="button" value="Cancelar" class="btn btn-danger" data-bs-dismiss="modal" />
                                            <input type="button" value="Inserir"   class="btn btn-success btnSalvarMeta" />                                        
                                        </div>                                
                                    </div>                            
                                </div>
                            </div> 
                        </div> 
                    </div>
                </div>
            </div>
        </div>        

        <div class="Area-direita">
            <div class="cabecalho-filtro">
                <div class="filtros-area">
                    <div class="lancamento-conciliado"><a href="">Conciliado</a></div>
                    <div class="lancamento-data"><a href="">Data</a></div>
                    <div class="lancamento-valor"><a href="">Valor</a></div>
                    <div class="lancamento-categoria"><a href="">Categoria</a></div>
                    <div class="lancamento-descricao"><a href="">Descrição</a></div>
                    <div class="lancamento-tipo"><a href="">Tipo</a></div>
                    <div class="lancamento-excluir"><a href="">Excluir</a></div>
                    <div class="lancamento-alterar"><a href="">Alterar</a></div>
                </div>

            </div>
            <div class="area-lancamentos">
                @foreach (var item in Model)
                {
                    <div class="lancamento-unitario">
                        <div class="lancamento-conciliado">@Html.DisplayFor(modelItem => item.Conciliado)</div>
                        <div class="lancamento-data"><p>@Convert.ToDateTime(item.Data).ToString("dd/MM/yyyy")</p></div>
                        <div class="lancamento-valor"><p>@Html.DisplayFor(modelItem => item.Valor)</p></div>
                        <div class="lancamento-categoria"><p>@Html.DisplayFor(modelItem => item.Cat.Nome)</p></div>
                        <div class="lancamento-descricao"><p>@Html.DisplayFor(modelItem => item.Descricao)</p></div>
                        <div class="lancamento-tipo"><p>@Html.DisplayFor(modelItem => item.Tipo)</p></div>
                        <div class="lancamento-excluir"><a class="btn-limpo delete" data-id="@item.Id"><img class="icone-lancamento-unitario" src="imagens/delete-icon.png" alt=""></a></div>
                        <div class="lancamento-alterar"><a class="btn-limpo edit" data-id="@item.Id"><img class="icone-lancamento-unitario" src="imagens/editar-icon.png" alt=""></a></div>
                    </div>
                }
            </div>
            @{
                if (Model.HasPreviousPage)
                {
                                                                               <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       type="button" class="btn btn-default">Anterior</a>
                }
                else
                {
                                                                               <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       type="button" class="btn btn-default" hidden>Anterior</a>
                }
            }
            @{
                if (Model.HasNextPage)
                {
                                                                               <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       type="button" class="btn btn-default">Próximo</a>
                }
                else
                {
                                                                               <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       type="button" class="btn btn-default" hidden>Próximo</a>
                }
            }
        </div>
    </div>

    <div class="modal fade" id=modal tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content modal-lancamento">
                <div class="modal-header">
                    <h1 class="modal-title" id="staticBackdropLabel"></h1>
                </div>
                <div class="modal-body">
                    <input type="hidden" class="form-control form-control-sm Id" />
                    <input type="hidden" class="form-control form-control-sm Conciliado" />
                    <div class="formulario-lancamento">

                        <div class="campos-insere-lan-row">

                            <div class="">
                                <p>Data</p>
                                <input type="date" class="formulario-lancamento-input form-control form-control-sm Data" />
                                <span class="text-danger1 erroData d-none"></span>
                            </div>
                            <div>
                                <p>Categoria</p>
                                @Html.DropDownList("Categ", String.Empty)
                                <span class="text-danger1 erroCatId d-none"></span>
                            </div>
                        </div>

                        <div class="campos-insere-lan-row">
                            <div class="valor-area">
                                <p>Valor</p>
                                <input type="text" class="formulario-lancamento-input campo-valor form-control form-control-sm Valor" onInput="mascaraMoeda(event);" />
                                <span class="text-danger1 erroValor d-none"></span>
                            </div>

                            <div class="form-group">
                                <div class="campo-tipo">
                                    <p>Tipo</p>
                                    @Html.DropDownList("TipoLanId", String.Empty)
                                    <span class="text-danger1 erroTipo d-none"></span>
                                </div>
                            </div>
                        </div>
                        <div class="">
                            <p>Descrição</p>
                            <input type="text" class="formulario-lancamento-input form-control form-control-sm Descricao" />
                            <span class="text-danger1 erroDescricao d-none"></span>
                        </div>

                        <div class="modal-footer">
                            <input type="checkbox" id="checkbox-menu-categorias">
                            <label for="checkbox-menu-categorias">
                                <a class="btn btn-primary" style="margin-right: ;">Categorias</a>
                            </label>
                            <div class="menu-categorias">
                                <div class="area-titulo-categorias">
                                    <h3>Inserir Categoria</h3>
                                    <input type="checkbox" id="checkbox-menu-categorias">
                                    <label for="checkbox-menu-categorias">
                                        <a class="btn btn-danger botao-fechar-modal">X</a>
                                    </label>
                                </div>

                                <div class="menu-categoria-db">

                                    <p>Título</p>
                                    <input class="formulario-lancamento-input" type="text" />
                                    <p>Tipo</p>
                                    <select>
                                        <option>
                                            Crédito
                                        </option>
                                        <option>
                                            Débito
                                        </option>
                                    </select>
                                </div>
                                <div>
                                    <label for="checkbox-menu-categorias">
                                        <a class="btn btn-success">Inserir Categoria</a>
                                    </label>
                                </div>

                            </div>
                            <input type="button" value="Cancelar" class="btn btn-danger" data-bs-dismiss="modal" />
                            <input type="button" value="Confirmar" class="btn btn-success btnSalvar" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @section scripts
        {
        <script>

                $(document).ready(function()
                {
                    document.getElementById("mouth").value = @ViewBag.mesConsulta;
                    document.getElementById("year").value = @ViewBag.anoConsulta; 
                    atual = @ViewBag.Receita;
                    var receita = atual.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});
                    atual = @ViewBag.Despesa;
                    var despesa = atual.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});
                    atual = @ViewBag.Saldo;
                    var saldo = atual.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});
                    document.getElementById("totReceita").value = receita;
                    document.getElementById("totDespesa").value = despesa;
                    document.getElementById("totSaldo").value = saldo;
                });

                $(".Ok").click(function ()
                {
                    var IDMes = 0;
                    var selMes = document.getElementById('mouth');
                    if (!selMes.value == 0)
                    {
                        var comboMes = document.getElementById("mouth");
                        IDMes = comboMes.options[comboMes.selectedIndex].value;
                    };
                    var IDAno = 0;
                    var selAno = document.getElementById('year');
                    if (!selAno.value == 0)
                    {
                        var comboAno = document.getElementById("year");
                        IDAno = comboAno.options[comboAno.selectedIndex].value;
                    };
                    atualizarFiltro(IDMes, IDAno);
                });

                $(".Todos").click(function ()
                {
                    var IDMes = 0;
                    var IDAno = 0;
                    atualizarFiltro(IDMes, IDAno);
                });

                $(".novameta").click(function ()
                {
                    escolherTituloModal("Adicionar uma Meta");
                    mostrarModalMeta();
                    atual = @ViewBag.ValorMeta;
                    var vmeta = atual.toLocaleString('pt-br', { minimumFractionDigits: 2 });   
                    $(".ValorMetaF").val(vmeta);
                });

                $(".novoLancamento").click(function ()
                {
                    escolherTituloModal("Adicionar um Lançamento");
                    mostrarModal();
                    limparFormulario();
                    $('.Id').val(0);
                    $('.Conciliado').val(false);
                });

                $(".categoria").click(function ()
                {
                    window.location.replace('categorias/index');
                });

                $(".delete").click(function ()
                {
                        var LId = $(this).attr("data-id");
                        excluirLancamento(LId);
                });

                $(".edit").click(function ()
                {
                        var LId = $(this).attr("data-id");
                        pegarLancamento(LId);
                });

                 $(".btnSalvarMeta").click(function ()
                {
                    var ValorMetaS = $(".ValorMetaF").val();
                    $.ajax({
                        url: '@Url.Action("AtualizarMeta", "Lancamentos")/',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        data: {
                            ValorMetaS: ValorMetaS
                        },
                        success: (e) =>
                        {
                                $("#modalMeta").modal('hide');
                                location.reload();
                        }
                    });                    
                });

                $(".btnSalvar").click(function ()
                {
                    var IDCat = "";
                    var sel = document.getElementById('Categ');
                    if (!sel.value == '')
                    {
                        var comboCategoria = document.getElementById("Categ");
                        IDCat = comboCategoria.options[comboCategoria.selectedIndex].value;
                    };
                    var IDTipo = "";
                    var tip = document.getElementById('TipoLanId');
                    if (!tip.value == '')
                    {
                        var comboTipo = document.getElementById("TipoLanId");
                        IDTipo = comboTipo.options[comboTipo.selectedIndex].value;
                    };

                    var lancamento = {
                        Id: $('.Id').val(),
                        Data: $('.Data').val(),
                        Descricao: $('.Descricao').val(),
                        Tipo: IDTipo,
                        Valor: $('.Valor').val(),
                        Conciliado: $('.Conciliado').val(),
                        Username: "",
                        CatId: IDCat
                    };
                    if (validarFormulario(lancamento))
                    {
                        if (parseInt(lancamento.Id) > 0)
                        {
                            atualizarLancamento(lancamento)
                        };
                        criarLancamento(lancamento)
                    };
                });

                function criarLancamento(lancamento)
                {
                    $.ajax(
                        {
                            url: '@Url.Action("NovoLancamento", "Lancamentos")/',
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            data: {
                                lancamento: lancamento
                            },
                            success: (e) =>
                            {
                                    $("#modal").modal('hide');
                                    limparFormulario();
                                    location.reload();
                            }
                        });
                }

                function pegarLancamento(lancamentoId) {
                    $.ajax({
                        dataType: "json",
                        type: "GET",
                        url: "Lancamentos/PegarLancamento",
                        data: {
                            lancamentoId: lancamentoId
                        },
                        success: function (lanc)
                        {
                            let data = new Date(lanc.data);
                            let diaA = '' + data.getDate();
                            let diaB = diaA.padStart(2, '0');
                            let dataFormatada = (data.getFullYear() + "-" + ((data.getMonth() + 1)) + "-" + diaB);
                            var valor = lanc.valor;
                            var valorFormatado = valor.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                            mostrarModal();
                            escolherTituloModal("Atualizar Lançamento");
                            $(".Id").val(lanc.id);
                            $(".Data").val(dataFormatada);
                            $(".Descricao").val(lanc.descricao);
                            $(".Valor").val(valorFormatado);
                            $(".Conciliado").val(lanc.conciliado);
                            document.getElementById("Categ").value = lanc.catId;
                            document.getElementById("TipoLanId").value = lanc.tipo;

                        }
                    })
                }

                function atualizarFiltro(IDMes, IDAno) {
                    const vData = [IDMes, IDAno];
                    $.ajax({
                        url: "Lancamentos/AtualizarFiltroMes",
                        method: 'POST',
                        data: {
                            IDMes: IDMes
                        },
                        success: (e) =>
                        {
                            $.ajax({
                                url: "Lancamentos/AtualizarFiltroAno",
                                method: 'POST',
                                data: {
                                    IDAno: IDAno
                                },
                                success: (e) =>
                                {
                                    location.reload();
                                }
                            })
                        }
                    });
                }

                function atualizarLancamento(lancamento) {
                    $.ajax({
                        url: '@Url.Action("AtualizarLancamento", "Lancamentos")/',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        data: {
                            lancamento: lancamento
                        },
                        success: (e) =>
                        {
                                $("#modal").modal('hide');
                                limparFormulario();
                                location.reload();
                        }
                    });
                }

                function excluirLancamento(lancamentoId) {
                    $.ajax({
                        url: "Lancamentos/ExcluirLancamento",
                        method: 'POST',
                        data: {
                            lancamentoId: lancamentoId
                        },
                        success: function (status) {
                            if (status) {
                                location.reload();
                            }
                            else
                                alert(status.mensagem);
                        }
                    });
                }

                function validarFormulario(lancamento) {
                    let DataValida = validarData(lancamento.Data);
                    let CatIdValida = validarCatId(lancamento.CatId);
                    let ValorValido = validarValor(lancamento.Valor);
                    let TipoValido = validarTipo(lancamento.Tipo);
                    let DescricaoValida = validarDescricao(lancamento.Descricao);
                    if (DataValida == true && CatIdValida == true && ValorValido == true && TipoValido == true && DescricaoValida == true)
                        return true;

                    return false;
                }

                function validarData(data) {
                    let DataValida = true;

                    if (data.trim() == '' || data == undefined) {
                        $(".Data").addClass('is-invalid');
                        $(".erroData").text("Preencha a data do Lançamento");
                        $(".erroData").removeClass("d-none");
                        DataValida = false;
                    }
                    else {
                        $(".Data").removeClass('is-invalid');
                        $(".Data").addClass('is-valid');
                        $(".erroData").addClass("d-none");
                        DataValida = true;
                    }
                    return DataValida;
                }

                function validarCatId(catid)
                {

                    let CatIdValida = true;

                    if (catid.trim() == '' || catid == undefined)
                    {
                        $(".CatId").addClass('is-invalid');
                        $(".erroCatId").text("Informe a Categoria");
                        $(".erroCatId").removeClass("d-none");
                        CatIdValida = false;
                    }
                    else
                    {
                        $(".CatId").removeClass('is-invalid');
                        $(".CatId").addClass('is-valid');
                        $(".erroCatId").addClass("d-none");
                        CatIdValida = true;
                    }
                    return CatIdValida;
                }

                function validarValor(valor) {
                    let ValorValido = true;

                    if (valor.trim() == '' || valor == undefined || valor.trim() == '0,00') {
                        $(".Valor").addClass('is-invalid');
                        $(".erroValor").text("Informe um valor");
                        $(".erroValor").removeClass("d-none");
                        ValorValido = false;
                    }
                    else {
                        $(".Valor").removeClass('is-invalid');
                        $(".Valor").addClass('is-valid');
                        $(".erroValor").addClass("d-none");
                        ValorValido = true;
                    }
                    return ValorValido;
                }

                function validarTipo(tipo) {
                    let TipoValido = true;

                    if (tipo.trim() == '' || tipo == undefined) {
                        $(".Tipo").addClass('is-invalid');
                        $(".erroTipo").text("Informe Débito ou Crédito");
                        $(".erroTipo").removeClass("d-none");
                        TipoValido = false;
                    }
                    else {
                        $(".Tipo").removeClass('is-invalid');
                        $(".Tipo").addClass('is-valid');
                        $(".erroTipo").addClass("d-none");
                        TipoValido = true;
                    }
                    return TipoValido;
                }


                function validarDescricao(descricao) {
                    let DescricaoValida = true;

                    if (descricao.trim() == '' || descricao == undefined) {
                        $(".Descricao").addClass('is-invalid');
                        $(".erroDescricao").text("Preencha a Descrição");
                        $(".erroDescricao").removeClass("d-none");
                        DescricaoValida = false;
                    }
                    else if (descricao.length > 50) {
                        $(".Descricao").addClass('is-invalid');
                        $(".erroDescricao").text("Use menos caracteres (até 50)");
                        $(".erroDescricao").removeClass("d-none");
                        DescricaoValida = false;
                    }
                    else {
                        $(".Descricao").removeClass('is-invalid');
                        $(".Descricao").addClass('is-valid');
                        $(".erroDescricao").addClass("d-none");
                        DescricaoValida = true;
                    }

                    return DescricaoValida;
                }

                function mascaraMoeda(event) {
                    const onlyDigits = event.target.value
                        .split("")
                        .filter(s => /\d/.test(s))
                        .join("")
                        .padStart(3, "0")
                    const digitsFloat = onlyDigits.slice(0, -2) + "." + onlyDigits.slice(-2)
                    event.target.value = maskCurrency(digitsFloat)
                }

                function maskCurrency(valor, locale = 'pt-BR', currency = 'BRL') {
                    return new Intl.NumberFormat(locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(valor)
                }

                function mostrarModal() {
                    new bootstrap.Modal($("#modal"), {}).show();
                }

                function mostrarModalMeta() {
                    new bootstrap.Modal($("#modalMeta"), {}).show();
                }

                function limparFormulario() {
                    $(".Data").val('');
                    $(".Data").removeClass('is-valid');
                    $(".CatId").val('');
                    $(".CatId").removeClass('is-valid');
                    $(".Valor").val('');
                    $(".Valor").removeClass('is-valid');
                    $(".Tipo").val('');
                    $(".Tipo").removeClass('is-valid');
                    $(".Descricao").val('');
                    $(".Descricao").removeClass('is-valid');
                }

                function escolherTituloModal(texto) 
                {
                    $(".modal-title").text(texto);
                }
        </script>
        }
</main>